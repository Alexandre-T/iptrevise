# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/{DataFixtures,Entity,Listener,Manager,Repository,Tests,Twig}'

    # Entity managers are imported separately to make sure they're public
    App\Manager\:
        resource: '../src/Manager'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        public: true


    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    App\Controller\:
        resource: '../src/Controller'
        public: true
        tags: ['controller.service_arguments']

    #Timestampable
    gedmo.listener.timestampable:
            class: Gedmo\Timestampable\TimestampableListener
            tags:
                - { name: doctrine.event_subscriber, connection: default }
            calls:
                - [ setAnnotationReader, [ "@annotation_reader" ] ]

    #Loggable
    app.listener.loggable:
            class: App\Listener\LoggableListener
            tags:
                - { name: doctrine.event_subscriber, connection: default }
            calls:
                - [ setAnnotationReader, [ "@annotation_reader" ] ]

    App\Listener\LoggableListenerInterface: '@app.listener.loggable'

    # KernelRequest listener
    app.listener.logger:
        class: App\Listener\LoggerListener
        tags:
            # translatable sets locale after router processing
            #- { name: kernel.event_listener, event: kernel.request, method: onLateKernelRequest, priority: -10 }
            # loggable hooks user username if one is in security context
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest}
        arguments:
            - '@app.listener.loggable'
            - '@security.token_storage'
            - '@security.authorization_checker'

    # Create menu as a service.
    # http://symfony.com/doc/current/bundles/KnpMenuBundle/menu_builder_service.html
    app.menu_builder:
        class: App\Menu\MenuBuilder
        public: true
        arguments: ["@knp_menu.factory", "@security.authorization_checker", "@security.token_storage"]
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main } # The alias is what is used to retrieve the menu
            - { name: knp_menu.menu_builder, method: createUserMenu, alias: user } # The alias is what is used to retrieve the menu
            - { name: knp_menu.menu_builder, method: createAdminMenu, alias: admin } # The alias is what is used to retrieve the menu

    #Twig extension for localized_date filter
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    # TODO autowire twig extension
    # Gravatar twig extension.
    app.twig.gravatar_extension:
        class: App\Twig\GravatarExtension
        tags:
            - { name: twig.extension }

    # Progress bar twig extension.
    app.twig.progress_bar_extension:
        class: App\Twig\ProgressBarExtension
        tags:
            - { name: twig.extension }

    # Roles twig filter
    app.twig.roles_extension:
        class: App\Twig\RolesExtension
        public: false
        tags:
            - { name: twig.extension }
        calls:
            - [ setTranslator, ['@translator.default']]

    # Services twig filter
    app.twig.services_extension:
        class: App\Twig\ServicesExtension
        public: false
        tags:
            - { name: twig.extension }

    # Label twig filter
    app.twig.label_extension:
        class: App\Twig\LabelExtension
        public: false
        tags:
            - { name: twig.extension }
        calls:
            - [ setTranslator, ['@translator.default']]

    # Network twig filter
    app.twig.network_extension:
        class: App\Twig\NetworkExtension
        public: false
        tags:
            - { name: twig.extension }
        calls:
            - [ setTranslator, ['@translator.default']]

    app.security.login_form_authenticator:
        class: App\Security\LoginFormAuthenticator
        autowire: true

    # Listener to hash the user password when necessary.
    app.doctrine.hash_password_listener:
        class: App\Doctrine\HashPasswordListener
        autowire: true
        tags:
            - { name: doctrine.event_subscriber }
